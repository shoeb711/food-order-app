{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shaikh Shoeb\\\\Desktop\\\\food-order-app\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport CartContext from '../../store/cart-context';\nimport Modal from '../UI/Modal';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\nimport CheckOut from './CheckOut';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartCtx = useContext(CartContext);\n  const [showOrder, setShowOrder] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const orderHandler = () => {\n    setShowOrder(true);\n  };\n\n  const submitOrderHandler = async userData => {\n    setIsSubmitting(true);\n\n    try {\n      const response = await fetch('https://react-http-73410-default-rtdb.firebaseio.com/order.json', {\n        method: 'POST',\n        body: JSON.stringify({\n          user: userData,\n          orderedItems: cartCtx.items\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error('Something went Wrong');\n      }\n    } catch (error) {\n      setHasError(error.message);\n    }\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n\n  const modalAction = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes['button--alt'],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), showOrder && /*#__PURE__*/_jsxDEV(CheckOut, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), !showOrder && modalAction]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"6AnFR2s0r6UhW3AOau/7+MMkGns=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/Shaikh Shoeb/Desktop/food-order-app/src/components/Cart/Cart.js"],"names":["useContext","useState","CartContext","Modal","classes","CartItem","CheckOut","Cart","props","cartCtx","showOrder","setShowOrder","hasError","setHasError","isSubmitting","setIsSubmitting","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","orderHandler","submitOrderHandler","userData","response","fetch","method","body","JSON","stringify","user","orderedItems","ok","Error","error","message","cartItems","map","name","price","bind","modalAction","actions","onClose","button","total"],"mappings":"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","sourcesContent":["import { useContext, useState } from 'react';\r\nimport CartContext from '../../store/cart-context';\r\nimport Modal from '../UI/Modal';\r\nimport classes from './Cart.module.css';\r\nimport CartItem from './CartItem';\r\nimport CheckOut from './CheckOut';\r\n\r\nconst Cart = (props) => {\r\n  const cartCtx = useContext(CartContext);\r\n  const [showOrder, setShowOrder] = useState(false);\r\n  const [hasError, setHasError] = useState(false)\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n\r\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCtx.items.length > 0;\r\n\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n\r\n  const cartItemAddHandler = (item) => {\r\n    cartCtx.addItem({ ...item, amount: 1 });\r\n  };\r\n\r\n  const orderHandler = () => {\r\n    setShowOrder(true);\r\n  };\r\n\r\n  const submitOrderHandler = async(userData) => {\r\n    setIsSubmitting(true)\r\n    try {\r\n      const response = await fetch('https://react-http-73410-default-rtdb.firebaseio.com/order.json', {\r\n      method : 'POST',\r\n      body : JSON.stringify({\r\n        user : userData,\r\n        orderedItems : cartCtx.items\r\n      })\r\n    });\r\n    if(!response.ok){\r\n      throw new Error('Something went Wrong')\r\n    } \r\n    } catch (error) {\r\n      setHasError(error.message)\r\n    }\r\n       \r\n  };    \r\n  \r\n\r\n  const cartItems = (\r\n    <ul className={classes['cart-items']}>\r\n      {cartCtx.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          amount={item.amount}\r\n          price={item.price}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const modalAction = (\r\n    <div className={classes.actions}>\r\n      <button className={classes['button--alt']} onClick={props.onClose}>\r\n        Close\r\n      </button>\r\n      {hasItems && (\r\n        <button className={classes.button} onClick={orderHandler}>\r\n          Order\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Modal onClose={props.onClose}>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      {showOrder && (\r\n        <CheckOut onConfirm={submitOrderHandler} onCancel={props.onClose} />\r\n      )}\r\n      {!showOrder && modalAction}\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}